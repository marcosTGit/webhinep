"""
Django settings for hinep project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from django.conf import settings
from django.conf.urls.static import static
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r-r)h7ig8bjjz@f-brdy9*ojx83ryw004=6oree2f1jwb8easq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False # produccion
# DEBUG = True # Desarrollo

# ALLOWED_HOSTS = ['*']  # porduccion
# ALLOWED_HOSTS = []  # porduccion
# DEBUG = False # DESARROILLO
# ALLOWED_HOSTS = ['127.0.0.1']  # DESARROILLO
ALLOWED_HOSTS = ['0.0.0.0', 'localhost', '127.0.0.1','192.168.0.108']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'web',
    'institucional',
    'django_otp',
    'django_otp.plugins.otp_static',  # Para usar OTP estáticos (opcional)
    'django_otp.plugins.otp_totp',    # Para TOTP (Time-based One-Time Passwords)
    'two_factor',                     # Django Two-Factor Auth
    'fontawesomefree',
    "private_storage",
    'django_recaptcha',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_otp.middleware.OTPMiddleware',
]

ROOT_URLCONF = 'hinep.urls'

# Configuración adicional
LOGIN_URL = 'two_factor:login'  # Reemplaza el inicio de sesión estándar con 2FA
LOGIN_REDIRECT_URL = 'accounts/profile/'  # accounts/profile/
SITE_ID = 1

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [],
        'DIRS': [BASE_DIR / 'web/templates',],  # Directorio global de templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hinep.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# 00000000000000000000000000000000000000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000000000000000000000000000000000000
# DESARROLLO
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# 00000000000000000000000000000000000000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000000000000000000000000000000000000

# # PRODUCCION 

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER', default='root'),
        'PASSWORD': config('DB_PASSWORD', default=''),
        'HOST': config('DB_HOST', default='127.0.0.1'),
        'PORT': config('DB_PORT', default='3306'),
        # 'OPTIONS': {
        #     'driver': 'mariadb',  # Indica que estás utilizando el conector oficial de MariaDB
        # }
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'America/Argentina/Buenos_Aires'
USE_I18N = True
USE_TZ = True

# 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')  # produccion

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
PRIVATE_STORAGE_ROOT = BASE_DIR / "private-media"
# PRIVATE_STORAGE_CLASS = 'private_storage.storage.minio.PrivateMinioStorage'
# MINIO_PRIVATE_STORAGE_MEDIA_BUCKET_NAME = 'private-files'
MINIO_PRIVATE_STORAGE_MEDIA_URL= '/private-files'
PRIVATE_STORAGE_AUTH_FUNCTION = 'private_storage.permissions.allow_authenticated'

# 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000


# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
# EMAIL_FILE_PATH = '/tmp/messages'  # Ruta donde se guardarán los emails
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_PORT = config('EMAIL_PORT')
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')

DEFAULT_FROM_EMAIL = config('EMAIL_HOST_USER')
SERVER_EMAIL = config('EMAIL_HOST')
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
import socket
# 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# EN DOCKER USAMOS ESTE SEGMENTO
# import netifaces as ni

# def get_ip_address():
#     interfaces = ni.interfaces()
#     for iface in interfaces:
#         if ni.AF_INET in ni.ifaddresses(iface):
#             ip = ni.ifaddresses(iface)[ni.AF_INET][0]['addr']
#             if ip != '127.0.0.1':
#                 return ip
# 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000000000000000000000000000000000


# HOST_IP = get_ip_address()  # para obtener la ip en docker 
HOST_IP = socket.gethostbyname(socket.gethostname())  # Obtiene la dirección IP
HOST_NAME = socket.gethostname()  # Obtiene el nombre del host

# DEFAULT_SERVER="hinep.catamarca.gob.ar"
DEFAULT_SERVER=HOST_IP
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 1800  # 30 minutos (1800 segundos)
SESSION_SAVE_EVERY_REQUEST = True  # Renueva la sesión con cada solicitud
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Expira la sesión al cerrar el navegador
HOST_PORT=config('HOST_PORT')
# CSRF_TRUSTED_ORIGINS = [f'http://{HOST_IP}:{HOST_PORT}']
# CSRF_TRUSTED_ORIGINS = [f'http://192.168.0.111:5580']
# CSRF_TRUSTED_ORIGINS = [f'http://192.168.0.108:8000']
CSRF_TRUSTED_ORIGINS = [f'http://{HOST_IP}:{HOST_PORT}',f'http://hinep.catamarca.gob.ar', f'https://hinep.catamarca.gob.ar']
# 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
# reCAPTCHA Keys
# # https://www.google.com/recaptcha/admin/create
RECAPTCHA_PUBLIC_KEY = config('RECAPTCHA_PUBLIC_KEY') #  captcha
RECAPTCHA_PRIVATE_KEY = config('RECAPTCHA_PRIVATE_KEY') #  captcha
# RECAPTCHA_PROXY = {'http': 'http://192.168.0.108', 'https': 'https://192.168.0.108'}
RECAPTCHA_PROXY = {'http': 'http://{HOST_IP}:{HOST_PORT}', 'https': 'https://{HOST_IP}:{HOST_PORT}'}
RECAPTCHA_DOMAIN = 'www.recaptcha.net'

